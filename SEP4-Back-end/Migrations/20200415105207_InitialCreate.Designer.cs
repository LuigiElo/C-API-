// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SEP4_Back_end.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200415105207_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Data");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Data");
                });

            modelBuilder.Entity("Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Servo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Spinning")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Servo");
                });

            modelBuilder.Entity("UniversalList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("List");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UniversalList");
                });

            modelBuilder.Entity("CO2", b =>
                {
                    b.HasBaseType("Data");

                    b.HasDiscriminator().HasValue("CO2");
                });

            modelBuilder.Entity("Humidity", b =>
                {
                    b.HasBaseType("Data");

                    b.HasDiscriminator().HasValue("Humidity");
                });

            modelBuilder.Entity("Temperature", b =>
                {
                    b.HasBaseType("Data");

                    b.HasDiscriminator().HasValue("Temperature");
                });

            modelBuilder.Entity("CO2List", b =>
                {
                    b.HasBaseType("UniversalList");

                    b.HasDiscriminator().HasValue("CO2List");
                });

            modelBuilder.Entity("HumidityList", b =>
                {
                    b.HasBaseType("UniversalList");

                    b.HasDiscriminator().HasValue("HumidityList");
                });

            modelBuilder.Entity("ServoList", b =>
                {
                    b.HasBaseType("UniversalList");

                    b.HasDiscriminator().HasValue("ServoList");
                });

            modelBuilder.Entity("TemperatureList", b =>
                {
                    b.HasBaseType("UniversalList");

                    b.HasDiscriminator().HasValue("TemperatureList");
                });
#pragma warning restore 612, 618
        }
    }
}
